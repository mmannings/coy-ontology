
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX xkos: <http://rdf-vocabulary.ddialliance.org/xkos#>
PREFIX json: <http://jsa.aksw.org/fn/json/>
PREFIX csv: <http://jsa.aksw.org/fn/csv/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

PREFIX cpc: <https://data.coypu.org/classification/cpc_v2.1/>
PREFIX hs: <https://data.coypu.org/classification/hs_2012/>
PREFIX nace: <https://data.coypu.org/classification/nace_r2/>
PREFIX isic: <https://data.coypu.org/classification/isic_r4/>

CONSTRUCT {
  ?from skos:closeMatch ?to
  
} WHERE {
  VALUES (?url ?from_col ?to_col ?from_ns ?to_ns) {
    (<https://unstats.un.org/unsd/classifications/Econ/tables/CPC/CPCv21_ISIC4/cpc21-isic4.txt> "CPC21code" "ISIC4code" cpc: isic:)
  } 
  
  ?url csv:parse (?rowJsonObj "-ho") .
  BIND(json:path(?rowJsonObj, "$." + ?from_col) AS ?from_code)
  BIND(json:path(?rowJsonObj, "$." + ?to_col) AS ?to_code)
  BIND(URI(CONCAT(STR(?from_ns), ?from_code)) AS ?from)
  BIND(URI(CONCAT(STR(?to_ns), ?to_code)) AS ?to)
  
  # there are cases where no appropriate ISIC correspondence exists, at least not according to the
  # provided mapping table, those are marked with "n/a"
  # we omit those for now, not sure if keeping them would bring any benefit
  FILTER(?to_code != "n/a")
  
}
#LIMIT 100
